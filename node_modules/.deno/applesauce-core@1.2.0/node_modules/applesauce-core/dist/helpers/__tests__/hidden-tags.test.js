import { describe, beforeEach, it, expect } from "vitest";
import { finalizeEvent, generateSecretKey, getPublicKey, kinds, nip04 } from "nostr-tools";
import { getHiddenTags, unlockHiddenTags } from "../hidden-tags.js";
import { unixNow } from "../time.js";
const key = generateSecretKey();
const pubkey = getPublicKey(key);
const signer = {
    nip04: {
        encrypt: (pubkey, plaintext) => nip04.encrypt(key, pubkey, plaintext),
        decrypt: (pubkey, ciphertext) => nip04.decrypt(key, pubkey, ciphertext),
    },
};
describe("Private Lists", () => {
    describe("unlockHiddenTags", () => {
        let list;
        beforeEach(async () => {
            list = finalizeEvent({
                kind: kinds.Mutelist,
                created_at: unixNow(),
                content: await nip04.encrypt(key, pubkey, JSON.stringify([["p", "npub1ye5ptcxfyyxl5vjvdjar2ua3f0hynkjzpx552mu5snj3qmx5pzjscpknpr"]])),
                tags: [],
            }, key);
        });
        it("should unlock hidden tags", async () => {
            await unlockHiddenTags(list, signer);
            expect(getHiddenTags(list)).toEqual(expect.arrayContaining([["p", "npub1ye5ptcxfyyxl5vjvdjar2ua3f0hynkjzpx552mu5snj3qmx5pzjscpknpr"]]));
        });
    });
});
