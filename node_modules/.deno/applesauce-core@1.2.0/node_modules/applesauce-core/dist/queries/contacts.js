import { kinds } from "nostr-tools";
import { map } from "rxjs/operators";
import { getContacts, getHiddenContacts, getPublicContacts } from "../helpers/contacts.js";
import { listenLatestUpdates } from "../observable/index.js";
/** A query that returns all contacts for a user */
export function ContactsQuery(pubkey) {
    return (events) => events.replaceable(kinds.Contacts, pubkey).pipe(
    // listen for event updates (hidden tags unlocked)
    listenLatestUpdates(events), 
    // Get all contacts
    map((e) => e && getContacts(e)));
}
/** A query that returns all public contacts for a user */
export function PublicContactsQuery(pubkey) {
    return (events) => events.replaceable(kinds.Contacts, pubkey).pipe(map((e) => e && getPublicContacts(e)));
}
/** A query that returns all hidden contacts for a user */
export function HiddenContactsQuery(pubkey) {
    return (events) => events.replaceable(kinds.Contacts, pubkey).pipe(
    // listen for event updates (hidden tags unlocked)
    listenLatestUpdates(events), 
    // Get hidden contacts
    map((e) => e && (getHiddenContacts(e) ?? null)));
}
