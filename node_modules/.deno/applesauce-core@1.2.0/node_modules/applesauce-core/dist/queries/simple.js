/** Creates a Query that returns a single event or undefined */
export function SingleEventQuery(id) {
    return (events) => events.event(id);
}
/** Creates a Query that returns a multiple events in a map */
export function MultipleEventsQuery(ids) {
    return (events) => events.events(ids);
}
/** Creates a Query returning the latest version of a replaceable event */
export function ReplaceableQuery(kind, pubkey, d) {
    return (events) => events.replaceable(kind, pubkey, d);
}
/** Creates a Query that returns an array of sorted events matching the filters */
export function TimelineQuery(filters, includeOldVersion) {
    filters = Array.isArray(filters) ? filters : [filters];
    return (events) => events.timeline(filters, includeOldVersion);
}
/** Creates a Query that returns a directory of events by their UID */
export function ReplaceableSetQuery(pointers) {
    return (events) => events.replaceableSet(pointers);
}
