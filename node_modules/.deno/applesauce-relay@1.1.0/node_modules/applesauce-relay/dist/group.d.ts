import { Filter, NostrEvent } from "nostr-tools";
import { Observable } from "rxjs";
import { IGroup, IRelay, PublishResponse, SubscriptionResponse, PublishOptions, RequestOptions, SubscriptionOptions } from "./types.js";
export declare class RelayGroup implements IGroup {
    relays: IRelay[];
    constructor(relays: IRelay[]);
    /** Takes an array of observables and only emits EOSE when all observables have emitted EOSE */
    protected mergeEOSE(...requests: Observable<SubscriptionResponse>[]): Observable<import("nostr-tools").Event | "EOSE">;
    /** Make a request to all relays */
    req(filters: Filter | Filter[], id?: string): Observable<SubscriptionResponse>;
    /** Send an event to all relays */
    event(event: NostrEvent): Observable<PublishResponse>;
    /** Publish an event to all relays with retries ( default 3 retries ) */
    publish(event: NostrEvent, opts?: PublishOptions): Observable<PublishResponse>;
    /** Request events from all relays with retries ( default 3 retries ) */
    request(filters: Filter | Filter[], opts?: RequestOptions): Observable<NostrEvent>;
    /** Open a subscription to all relays with retries ( default 3 retries ) */
    subscription(filters: Filter | Filter[], opts?: SubscriptionOptions): Observable<SubscriptionResponse>;
}
