import { EventTemplate } from "nostr-tools";
import { Nip07Interface } from "../nip-07.js";
/** AN error that is throw when the window.nostr extension is missing */
export declare class ExtensionMissingError extends Error {
}
/** A signer that is a proxy for window.nostr */
export declare class ExtensionSigner implements Nip07Interface {
    get nip04(): {
        encrypt: (pubkey: string, plaintext: string) => Promise<string> | string;
        decrypt: (pubkey: string, ciphertext: string) => Promise<string> | string;
    } | undefined;
    get nip44(): {
        encrypt: (pubkey: string, plaintext: string) => Promise<string> | string;
        decrypt: (pubkey: string, ciphertext: string) => Promise<string> | string;
    } | undefined;
    protected pubkey: string | undefined;
    getPublicKey(): string | Promise<string>;
    getRelays(): Record<string, {
        read: boolean;
        write: boolean;
    }> | Promise<Record<string, {
        read: boolean;
        write: boolean;
    }>>;
    signEvent(template: EventTemplate): import("nostr-tools").Event | Promise<import("nostr-tools").Event>;
}
