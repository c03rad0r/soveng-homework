import { VerifiedEvent } from "nostr-tools";
import { Nip07Interface } from "../nip-07.js";
/** A signer that only implements getPublicKey and throws on ever other method */
export declare class ReadonlySigner implements Nip07Interface {
    private pubkey;
    nip04: {
        encrypt: (pubkey: string, plaintext: string) => Promise<string> | string;
        decrypt: (pubkey: string, ciphertext: string) => Promise<string> | string;
    };
    nip44: {
        encrypt: (pubkey: string, plaintext: string) => Promise<string> | string;
        decrypt: (pubkey: string, ciphertext: string) => Promise<string> | string;
    };
    constructor(pubkey: string);
    getPublicKey(): string;
    getRelays(): {};
    signEvent(): VerifiedEvent;
    nip04Encrypt(): string;
    nip04Decrypt(): string;
    nip44Encrypt(): string;
    nip44Decrypt(): string;
}
