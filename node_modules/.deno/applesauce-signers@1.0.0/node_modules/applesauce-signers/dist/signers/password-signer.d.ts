import { EventTemplate } from "nostr-tools";
import { Deferred } from "applesauce-core/promise";
import { Nip07Interface } from "../nip-07.js";
/** A NIP-49 (Private Key Encryption) signer */
export declare class PasswordSigner implements Nip07Interface {
    key: Uint8Array | null;
    ncryptsec?: string;
    nip04: {
        encrypt: (pubkey: string, plaintext: string) => Promise<string> | string;
        decrypt: (pubkey: string, ciphertext: string) => Promise<string> | string;
    };
    nip44: {
        encrypt: (pubkey: string, plaintext: string) => Promise<string> | string;
        decrypt: (pubkey: string, ciphertext: string) => Promise<string> | string;
    };
    get unlocked(): boolean;
    constructor();
    unlockPromise?: Deferred<void>;
    protected requestUnlock(): Deferred<void> | undefined;
    setPassword(password: string): Promise<void>;
    testPassword(password: string): Promise<void>;
    unlock(password: string): Promise<void>;
    getPublicKey(): Promise<string>;
    signEvent(event: EventTemplate): Promise<import("nostr-tools").VerifiedEvent>;
    nip04Encrypt(pubkey: string, plaintext: string): Promise<string>;
    nip04Decrypt(pubkey: string, ciphertext: string): Promise<string>;
    nip44Encrypt(pubkey: string, plaintext: string): Promise<string>;
    nip44Decrypt(pubkey: string, ciphertext: string): Promise<string>;
}
